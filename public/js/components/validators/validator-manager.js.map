{"version":3,"file":"validator-manager.js","sourceRoot":"","sources":["../../../../src/components/validators/validator-manager.ts"],"names":[],"mappings":";;;IAGA;QACE,0BACU,UAIN;YAJM,eAAU,GAAV,UAAU,CAIhB;QAAG,CAAC;QAED,kCAAO,GAAd;YACE,KAAsB,UAAe,EAAf,KAAA,IAAI,CAAC,UAAU,EAAf,cAAe,EAAf,IAAe,EAAE;gBAAlC,IAAM,OAAO,SAAA;gBAChB,KAAmB,UAAa,EAAb,KAAA,OAAO,CAAC,KAAK,EAAb,cAAa,EAAb,IAAa,EAAE;oBAA7B,IAAM,IAAI,SAAA;oBACb,IAAM,KAAK,GAAG,cAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,aAAa,CAAC,CAAC;oBAC5D,IAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC;oBAC5B,IAAI,CAAC,OAAO,EAAE;wBACZ,KAAK,CAAC,OAAO,CAAC,cAAc,CAAC,CAAC;wBAC9B,OAAO,KAAK,CAAC;qBACd;iBACF;aACF;YACD,OAAO,IAAI,CAAC;QACd,CAAC;QACH,uBAAC;IAAD,CAAC,AArBD,IAqBC","sourcesContent":["import Form from \"../form\";\r\nimport IValidatorRuleCallable from \"./validator-rule-callable\";\r\n\r\nexport default class ValidatorManager {\r\n  constructor(\r\n    private chainRules: Array<{\r\n      selectorField: string;\r\n      rules: IValidatorRuleCallable[];\r\n      messageInvalid: string;\r\n    }>) {}\r\n\r\n  public isValid(): boolean {\r\n    for (const ruleSet of this.chainRules) {\r\n      for (const rule of ruleSet.rules) {\r\n        const value = Form.getValueFromField(ruleSet.selectorField);\r\n        const isValid = rule(value);\r\n        if (!isValid) {\r\n          alert(ruleSet.messageInvalid);\r\n          return false;\r\n        }\r\n      }\r\n    }\r\n    return true;\r\n  }\r\n}\r\n"]}